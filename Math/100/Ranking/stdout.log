export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";cp -r /home/tdurieux/projects/math/math_100 /tmp/math_100_Ranking;cd /tmp/math_100_Ranking;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Math/lib/* lib/;find . -type f -name "package-info.java" -delete;
cd /tmp/math_100_Ranking;cp -r /home/tdurieux/nopol/z3-x64-debian-7.7/bin/ lib/z3;time java -cp /home/tdurieux/nopol/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar fr.inria.lille.repair.Main --mode ranking --type condition --oracle angelic --synthesis smt --solver z3 --solver-path lib/z3/z3 --complianceLevel 3 --source src/java/ --classpath target/classes/:target/test-classes/:lib/commons-discovery-0.5.jar:/home/tdurieux/nopol/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar;rm -rf /tmp/math_100_Ranking;

/************************/
Executed tests:   1179
Successful tests: 1144
Failed tests:     35

org.apache.commons.math.fraction.FractionTest#testFloatValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testFloatValue(FractionTest.java:183)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testAbs
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testAbs(FractionTest.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testAdd
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testAdd(FractionTest.java:289)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testSubtract
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testSubtract(FractionTest.java:444)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testReciprocal
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testReciprocal(FractionTest.java:234)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testEpsilonLimitConstructor(FractionTest.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testGetReducedFraction
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(FractionTest.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testConstructorDouble
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testConstructorDouble(FractionTest.java:208)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testCompareTo
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testCompareTo(FractionTest.java:164)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testDoubleConstructor
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testDoubleConstructor(FractionTest.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testLongValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testLongValue(FractionTest.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testDigitLimitConstructor(FractionTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testIntValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testIntValue(FractionTest.java:191)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testDivide
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testDivide(FractionTest.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testMultiply
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testMultiply(FractionTest.java:423)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(FractionTest.java:514)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testNegate
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testNegate(FractionTest.java:265)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testGoldenRatio
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testGoldenRatio(FractionTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testIntegerOverflow
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:143)
	at org.apache.commons.math.fraction.FractionTest.testIntegerOverflow(FractionTest.java:137)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testDoubleValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testDoubleValue(FractionTest.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testConstructor
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testConstructor(FractionTest.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters
java.lang.ArrayIndexOutOfBoundsException: 6
	at org.apache.commons.math.estimation.AbstractEstimator.getCovariances(AbstractEstimator.java:173)
	at org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(GaussNewtonEstimatorTest.java:472)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.optimization.MultiDirectionalTest#testCostExceptions
java.lang.VerifyError: StackMapTable error: bad offset
Exception Details:
  Location:
    org/apache/commons/math/optimization/MultiDirectional.iterateSimplex()V @0: getstatic
  Reason:
    Invalid stackmap specification.
  Current Frame:
    bci: @133
    flags: { }
    locals: { 'org/apache/commons/math/optimization/MultiDirectional', '[Lorg/apache/commons/math/optimization/PointCostPair;', double, double_2nd, double, double_2nd }
    stack: { }
  Bytecode:
    0000000: b200 5003 5c2e 0460 4f2a b400 084c b200
    0000010: 5004 5c2e 0460 4f2b 0332 b600 0949 b200
    0000020: 5005 5c2e 0460 4f2a 2b0f b700 0a39 04b2
    0000030: 0050 065c 2e04 604f 1804 2898 9c00 53b2
    0000040: 0050 075c 2e04 604f 2ab4 0008 3a06 b200
    0000050: 5008 5c2e 0460 4f2a 2b2a b400 04b7 000a
    0000060: 3907 b200 5010 065c 2e04 604f 1804 1807
    0000070: 989d 0013 b200 5010 075c 2e04 604f 2a19
    0000080: 06b5 0008 b200 5010 085c 2e04 604f b1b2
    0000090: 0050 1009 5c2e 0460 4f2a 2b2a b400 07b7
    00000a0: 000a 3906 b200 5010 0a5c 2e04 604f 1806
    00000b0: 2898 9c00 0eb2 0050 100b 5c2e 0460 4fb1
    00000c0: b200 5010 0c5c 2e04 604f a7ff 36       
  Stackmap Table:
    same_frame(@0)
    full_frame(@132,{Object[#39],Object[#40],Double,Double,Object[#40],Double},{})
    chop_frame(@133,2)
    chop_frame(@182,3)

	at org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions(MultiDirectionalTest.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.optimization.MultiDirectionalTest#testRosenbrock
java.lang.VerifyError: StackMapTable error: bad offset
Exception Details:
  Location:
    org/apache/commons/math/optimization/MultiDirectional.iterateSimplex()V @0: getstatic
  Reason:
    Invalid stackmap specification.
  Current Frame:
    bci: @133
    flags: { }
    locals: { 'org/apache/commons/math/optimization/MultiDirectional', '[Lorg/apache/commons/math/optimization/PointCostPair;', double, double_2nd, double, double_2nd }
    stack: { }
  Bytecode:
    0000000: b200 5003 5c2e 0460 4f2a b400 084c b200
    0000010: 5004 5c2e 0460 4f2b 0332 b600 0949 b200
    0000020: 5005 5c2e 0460 4f2a 2b0f b700 0a39 04b2
    0000030: 0050 065c 2e04 604f 1804 2898 9c00 53b2
    0000040: 0050 075c 2e04 604f 2ab4 0008 3a06 b200
    0000050: 5008 5c2e 0460 4f2a 2b2a b400 04b7 000a
    0000060: 3907 b200 5010 065c 2e04 604f 1804 1807
    0000070: 989d 0013 b200 5010 075c 2e04 604f 2a19
    0000080: 06b5 0008 b200 5010 085c 2e04 604f b1b2
    0000090: 0050 1009 5c2e 0460 4f2a 2b2a b400 07b7
    00000a0: 000a 3906 b200 5010 0a5c 2e04 604f 1806
    00000b0: 2898 9c00 0eb2 0050 100b 5c2e 0460 4fb1
    00000c0: b200 5010 0c5c 2e04 604f a7ff 36       
  Stackmap Table:
    same_frame(@0)
    full_frame(@132,{Object[#39],Object[#40],Double,Double,Object[#40],Double},{})
    chop_frame(@133,2)
    chop_frame(@182,3)

	at org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(MultiDirectionalTest.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.optimization.MultiDirectionalTest#testPowell
java.lang.VerifyError: StackMapTable error: bad offset
Exception Details:
  Location:
    org/apache/commons/math/optimization/MultiDirectional.iterateSimplex()V @0: getstatic
  Reason:
    Invalid stackmap specification.
  Current Frame:
    bci: @133
    flags: { }
    locals: { 'org/apache/commons/math/optimization/MultiDirectional', '[Lorg/apache/commons/math/optimization/PointCostPair;', double, double_2nd, double, double_2nd }
    stack: { }
  Bytecode:
    0000000: b200 5003 5c2e 0460 4f2a b400 084c b200
    0000010: 5004 5c2e 0460 4f2b 0332 b600 0949 b200
    0000020: 5005 5c2e 0460 4f2a 2b0f b700 0a39 04b2
    0000030: 0050 065c 2e04 604f 1804 2898 9c00 53b2
    0000040: 0050 075c 2e04 604f 2ab4 0008 3a06 b200
    0000050: 5008 5c2e 0460 4f2a 2b2a b400 04b7 000a
    0000060: 3907 b200 5010 065c 2e04 604f 1804 1807
    0000070: 989d 0013 b200 5010 075c 2e04 604f 2a19
    0000080: 06b5 0008 b200 5010 085c 2e04 604f b1b2
    0000090: 0050 1009 5c2e 0460 4f2a 2b2a b400 07b7
    00000a0: 000a 3906 b200 5010 0a5c 2e04 604f 1806
    00000b0: 2898 9c00 0eb2 0050 100b 5c2e 0460 4fb1
    00000c0: b200 5010 0c5c 2e04 604f a7ff 36       
  Stackmap Table:
    same_frame(@0)
    full_frame(@132,{Object[#39],Object[#40],Double,Double,Object[#40],Double},{})
    chop_frame(@133,2)
    chop_frame(@182,3)

	at org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(MultiDirectionalTest.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(FractionFormatTest.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(FractionFormatTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseProper
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:214)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:245)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseProper(FractionFormatTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:214)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:245)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(FractionFormatTest.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParse
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:309)
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:133)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:245)
	at org.apache.commons.math.fraction.FractionFormatTest.testParse(FractionFormatTest.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatZero
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(FractionFormatTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(FractionFormatTest.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseInteger
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:283)
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:133)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:245)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(FractionFormatTest.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormat
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormat(FractionFormatTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:309)
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:133)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:245)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(FractionFormatTest.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)


/************************/
/* Suspicious statement */
/************************/
org.apache.commons.math.fraction.ProperFractionFormat:224 -> 0.4225771273642583 (ep: 6, ef: 10, np: 1138, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:228 -> 0.4225771273642583 (ep: 6, ef: 10, np: 1138, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:229 -> 0.4225771273642583 (ep: 6, ef: 10, np: 1138, nf: 25)
org.apache.commons.math.fraction.FractionFormat:114 -> 0.4225771273642583 (ep: 6, ef: 10, np: 1138, nf: 25)
org.apache.commons.math.fraction.FractionFormat:115 -> 0.4225771273642583 (ep: 6, ef: 10, np: 1138, nf: 25)
org.apache.commons.math.fraction.FractionFormat:132 -> 0.4225771273642583 (ep: 6, ef: 10, np: 1138, nf: 25)
org.apache.commons.math.fraction.FractionFormat:133 -> 0.4225771273642583 (ep: 6, ef: 10, np: 1138, nf: 25)
org.apache.commons.math.fraction.FractionFormat:154 -> 0.4225771273642583 (ep: 6, ef: 10, np: 1138, nf: 25)
org.apache.commons.math.fraction.FractionFormat:155 -> 0.4225771273642583 (ep: 6, ef: 10, np: 1138, nf: 25)
org.apache.commons.math.fraction.FractionFormat:156 -> 0.4225771273642583 (ep: 6, ef: 10, np: 1138, nf: 25)
org.apache.commons.math.fraction.FractionFormat:157 -> 0.4225771273642583 (ep: 6, ef: 10, np: 1138, nf: 25)
org.apache.commons.math.fraction.FractionFormat:277 -> 0.3194382824999699 (ep: 2, ef: 5, np: 1142, nf: 30)
org.apache.commons.math.fraction.FractionFormat:278 -> 0.3194382824999699 (ep: 2, ef: 5, np: 1142, nf: 30)
org.apache.commons.math.fraction.FractionFormat:279 -> 0.3194382824999699 (ep: 2, ef: 5, np: 1142, nf: 30)
org.apache.commons.math.fraction.FractionFormat:383 -> 0.3194382824999699 (ep: 2, ef: 5, np: 1142, nf: 30)
org.apache.commons.math.fraction.ProperFractionFormat:133 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:244 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:245 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:261 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:264 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:267 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:268 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:360 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:361 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:362 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:371 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:372 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:373 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:375 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:378 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:379 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:380 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:382 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:387 -> 0.2988071523335984 (ep: 3, ef: 5, np: 1141, nf: 30)
org.apache.commons.math.fraction.FractionFormat:233 -> 0.2817180849095055 (ep: 4, ef: 5, np: 1140, nf: 30)
org.apache.commons.math.fraction.FractionFormat:225 -> 0.25555062599997597 (ep: 3, ef: 4, np: 1141, nf: 31)
org.apache.commons.math.fraction.ProperFractionFormat:211 -> 0.23904572186687872 (ep: 0, ef: 2, np: 1144, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:212 -> 0.23904572186687872 (ep: 0, ef: 2, np: 1144, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:213 -> 0.23904572186687872 (ep: 0, ef: 2, np: 1144, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:214 -> 0.23904572186687872 (ep: 0, ef: 2, np: 1144, nf: 33)
org.apache.commons.math.fraction.FractionFormat:309 -> 0.23904572186687872 (ep: 0, ef: 2, np: 1144, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:166 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:173 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:174 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:175 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:182 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:193 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:196 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:197 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:205 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.FractionFormat:291 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.FractionFormat:292 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.FractionFormat:293 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.FractionFormat:286 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.FractionFormat:297 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.FractionFormat:300 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.FractionFormat:301 -> 0.19518001458970666 (ep: 1, ef: 2, np: 1143, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:154 -> 0.1690308509457033 (ep: 2, ef: 2, np: 1142, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:157 -> 0.1690308509457033 (ep: 2, ef: 2, np: 1142, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:158 -> 0.1690308509457033 (ep: 2, ef: 2, np: 1142, nf: 33)
org.apache.commons.math.fraction.FractionFormat:283 -> 0.1690308509457033 (ep: 0, ef: 1, np: 1144, nf: 34)
org.apache.commons.math.fraction.ProperFractionFormat:134 -> 0.15118578920369088 (ep: 3, ef: 2, np: 1141, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:138 -> 0.15118578920369088 (ep: 3, ef: 2, np: 1141, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:141 -> 0.15118578920369088 (ep: 3, ef: 2, np: 1141, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:144 -> 0.15118578920369088 (ep: 3, ef: 2, np: 1141, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:145 -> 0.15118578920369088 (ep: 3, ef: 2, np: 1141, nf: 33)
org.apache.commons.math.fraction.ProperFractionFormat:116 -> 0.13801311186847084 (ep: 4, ef: 2, np: 1140, nf: 33)
org.apache.commons.math.estimation.SimpleEstimationProblem:58 -> 0.11952286093343936 (ep: 1, ef: 1, np: 1143, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:162 -> 0.09759000729485333 (ep: 2, ef: 1, np: 1142, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:165 -> 0.09759000729485333 (ep: 2, ef: 1, np: 1142, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:166 -> 0.09759000729485333 (ep: 2, ef: 1, np: 1142, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:167 -> 0.09759000729485333 (ep: 2, ef: 1, np: 1142, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:168 -> 0.09759000729485333 (ep: 2, ef: 1, np: 1142, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:169 -> 0.09759000729485333 (ep: 2, ef: 1, np: 1142, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:170 -> 0.09759000729485333 (ep: 2, ef: 1, np: 1142, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:171 -> 0.09759000729485333 (ep: 2, ef: 1, np: 1142, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:172 -> 0.09759000729485333 (ep: 2, ef: 1, np: 1142, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:173 -> 0.09759000729485333 (ep: 2, ef: 1, np: 1142, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:172 -> 0.05345224838248487 (ep: 9, ef: 1, np: 1135, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:156 -> 0.048795003647426664 (ep: 11, ef: 1, np: 1133, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:157 -> 0.048795003647426664 (ep: 11, ef: 1, np: 1133, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:162 -> 0.048795003647426664 (ep: 11, ef: 1, np: 1133, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:165 -> 0.048795003647426664 (ep: 11, ef: 1, np: 1133, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:166 -> 0.048795003647426664 (ep: 11, ef: 1, np: 1133, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:168 -> 0.048795003647426664 (ep: 11, ef: 1, np: 1133, nf: 34)
org.apache.commons.math.estimation.WeightedMeasurement:146 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.WeightedMeasurement:147 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:68 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:69 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:70 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:71 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:72 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:74 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:77 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:86 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:93 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:94 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:101 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.SimpleEstimationProblem:102 -> 0.04688072309384954 (ep: 12, ef: 1, np: 1132, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:57 -> 0.045175395145262566 (ep: 13, ef: 1, np: 1131, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:105 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:108 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:109 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:110 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:111 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:112 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:115 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:119 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:120 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:121 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:122 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:123 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:125 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:126 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:129 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:130 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:131 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:135 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:136 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:137 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:138 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:139 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:144 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:145 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.GaussNewtonEstimator:153 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.estimation.EstimatedParameter:107 -> 0.04364357804719848 (ep: 14, ef: 1, np: 1130, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:735 -> 0.042257712736425826 (ep: 15, ef: 1, np: 1129, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:736 -> 0.042257712736425826 (ep: 15, ef: 1, np: 1129, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:747 -> 0.042257712736425826 (ep: 15, ef: 1, np: 1129, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:748 -> 0.042257712736425826 (ep: 15, ef: 1, np: 1129, nf: 34)
org.apache.commons.math.estimation.WeightedMeasurement:155 -> 0.042257712736425826 (ep: 15, ef: 1, np: 1129, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:151 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:152 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:153 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:154 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:155 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:156 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:159 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:720 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:721 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:722 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:725 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:726 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:727 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:728 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:733 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:734 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:742 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:743 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:744 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:746 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:753 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:754 -> 0.040996003084539386 (ep: 16, ef: 1, np: 1128, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:147 -> 0.03984095364447979 (ep: 17, ef: 1, np: 1127, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:591 -> 0.038778336716474064 (ep: 18, ef: 1, np: 1126, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:847 -> 0.03779644730092272 (ep: 19, ef: 1, np: 1125, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:710 -> 0.03688555567816588 (ep: 20, ef: 1, np: 1124, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:713 -> 0.03688555567816588 (ep: 20, ef: 1, np: 1124, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:716 -> 0.03688555567816588 (ep: 20, ef: 1, np: 1124, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:588 -> 0.035245368842512066 (ep: 22, ef: 1, np: 1122, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:590 -> 0.035245368842512066 (ep: 22, ef: 1, np: 1122, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:798 -> 0.035245368842512066 (ep: 22, ef: 1, np: 1122, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:799 -> 0.035245368842512066 (ep: 22, ef: 1, np: 1122, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:802 -> 0.035245368842512066 (ep: 22, ef: 1, np: 1122, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:811 -> 0.035245368842512066 (ep: 22, ef: 1, np: 1122, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:844 -> 0.035245368842512066 (ep: 22, ef: 1, np: 1122, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:777 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:778 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:779 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:782 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:785 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:786 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:787 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:789 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:792 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:794 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:797 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:806 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:807 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:808 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:809 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:810 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:813 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:816 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:817 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:818 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:823 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:829 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:843 -> 0.03450327796711771 (ep: 23, ef: 1, np: 1121, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:581 -> 0.033806170189140665 (ep: 24, ef: 1, np: 1120, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:73 -> 0.028988551782622423 (ep: 33, ef: 1, np: 1111, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:74 -> 0.028988551782622423 (ep: 33, ef: 1, np: 1111, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:75 -> 0.028988551782622423 (ep: 33, ef: 1, np: 1111, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:76 -> 0.028988551782622423 (ep: 33, ef: 1, np: 1111, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:77 -> 0.028988551782622423 (ep: 33, ef: 1, np: 1111, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:78 -> 0.028988551782622423 (ep: 33, ef: 1, np: 1111, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:79 -> 0.028988551782622423 (ep: 33, ef: 1, np: 1111, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:82 -> 0.028988551782622423 (ep: 33, ef: 1, np: 1111, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:267 -> 0.028988551782622423 (ep: 33, ef: 1, np: 1111, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:1000 -> 0.02857142857142857 (ep: 34, ef: 1, np: 1110, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:1001 -> 0.02857142857142857 (ep: 34, ef: 1, np: 1110, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:1003 -> 0.02857142857142857 (ep: 34, ef: 1, np: 1110, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:1004 -> 0.02857142857142857 (ep: 34, ef: 1, np: 1110, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:1006 -> 0.02857142857142857 (ep: 34, ef: 1, np: 1110, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:278 -> 0.027066598098038335 (ep: 38, ef: 1, np: 1106, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:127 -> 0.02639818386742273 (ep: 40, ef: 1, np: 1104, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:128 -> 0.02639818386742273 (ep: 40, ef: 1, np: 1104, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:129 -> 0.02639818386742273 (ep: 40, ef: 1, np: 1104, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:130 -> 0.02639818386742273 (ep: 40, ef: 1, np: 1104, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:131 -> 0.02639818386742273 (ep: 40, ef: 1, np: 1104, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:133 -> 0.02639818386742273 (ep: 40, ef: 1, np: 1104, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:99 -> 0.02519763153394848 (ep: 44, ef: 1, np: 1100, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:104 -> 0.02519763153394848 (ep: 44, ef: 1, np: 1100, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:105 -> 0.02519763153394848 (ep: 44, ef: 1, np: 1100, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:106 -> 0.02519763153394848 (ep: 44, ef: 1, np: 1100, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:107 -> 0.02519763153394848 (ep: 44, ef: 1, np: 1100, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:108 -> 0.02519763153394848 (ep: 44, ef: 1, np: 1100, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:109 -> 0.02519763153394848 (ep: 44, ef: 1, np: 1100, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:111 -> 0.02519763153394848 (ep: 44, ef: 1, np: 1100, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:113 -> 0.02519763153394848 (ep: 44, ef: 1, np: 1100, nf: 34)
org.apache.commons.math.estimation.EstimatedParameter:79 -> 0.024922239313961342 (ep: 45, ef: 1, np: 1099, nf: 34)
org.apache.commons.math.estimation.EstimatedParameter:80 -> 0.024922239313961342 (ep: 45, ef: 1, np: 1099, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:48 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:49 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:88 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:89 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:226 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:227 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:230 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:231 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:234 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:235 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:236 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:237 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:239 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.AbstractEstimator:241 -> 0.024397501823713332 (ep: 47, ef: 1, np: 1097, nf: 34)
org.apache.commons.math.estimation.WeightedMeasurement:92 -> 0.02414726442081476 (ep: 48, ef: 1, np: 1096, nf: 34)
org.apache.commons.math.estimation.WeightedMeasurement:111 -> 0.02414726442081476 (ep: 48, ef: 1, np: 1096, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:523 -> 0.02344036154692477 (ep: 51, ef: 1, np: 1093, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:526 -> 0.02344036154692477 (ep: 51, ef: 1, np: 1093, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:405 -> 0.023218173010628604 (ep: 52, ef: 1, np: 1092, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:1031 -> 0.023218173010628604 (ep: 52, ef: 1, np: 1092, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:1032 -> 0.023218173010628604 (ep: 52, ef: 1, np: 1092, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:1034 -> 0.023218173010628604 (ep: 52, ef: 1, np: 1092, nf: 34)
org.apache.commons.math.estimation.EstimatedParameter:86 -> 0.023218173010628604 (ep: 52, ef: 1, np: 1092, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:390 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:394 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:395 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:399 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:400 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:404 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:410 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:411 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:413 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:414 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:416 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:420 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:421 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:423 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:424 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:1020 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:1021 -> 0.02279211529192759 (ep: 54, ef: 1, np: 1090, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:604 -> 0.021128856368212913 (ep: 63, ef: 1, np: 1081, nf: 34)
org.apache.commons.math.linear.RealMatrixImpl:611 -> 0.021128856368212913 (ep: 63, ef: 1, np: 1081, nf: 34)


