export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";cp -r /home/tdurieux/projects/math/math_95 /tmp/math_95_Ranking;cd /tmp/math_95_Ranking;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Math/lib/* lib/;find . -type f -name "package-info.java" -delete;
cd /tmp/math_95_Ranking;cp -r /home/tdurieux/nopol/z3-x64-debian-7.7/bin/ lib/z3;time java -cp /home/tdurieux/nopol/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar fr.inria.lille.repair.Main --mode ranking --type condition --oracle angelic --synthesis smt --solver z3 --solver-path lib/z3/z3 --complianceLevel 6 --source src/java/ --classpath target/classes/:target/test-classes/:lib/commons-discovery-0.5.jar:/home/tdurieux/nopol/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar;rm -rf /tmp/math_95_Ranking;

/************************/
Executed tests:   1301
Successful tests: 1252
Failed tests:     49

org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom
java.lang.IllegalArgumentException: Invalid endpoint parameters:  lowerBound=0.0 initial=-1.0 upperBound=1.7976931348623157E308
	at org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(UnivariateRealSolverUtils.java:179)
	at org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(UnivariateRealSolverUtils.java:128)
	at org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(AbstractContinuousDistribution.java:84)
	at org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(FDistributionImpl.java:106)
	at org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(FDistributionTest.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testFloatValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testFloatValue(FractionTest.java:183)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testAbs
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testAbs(FractionTest.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testAdd
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testAdd(FractionTest.java:289)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testSubtract
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testSubtract(FractionTest.java:444)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testReciprocal
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testReciprocal(FractionTest.java:234)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testEpsilonLimitConstructor(FractionTest.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testGetReducedFraction
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(FractionTest.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testConstructorDouble
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testConstructorDouble(FractionTest.java:208)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testCompareTo
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testCompareTo(FractionTest.java:164)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testDoubleConstructor
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testDoubleConstructor(FractionTest.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testLongValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testLongValue(FractionTest.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testDigitLimitConstructor(FractionTest.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testIntValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testIntValue(FractionTest.java:191)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testDivide
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testDivide(FractionTest.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testMultiply
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testMultiply(FractionTest.java:423)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(FractionTest.java:514)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testNegate
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testNegate(FractionTest.java:265)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testGoldenRatio
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testGoldenRatio(FractionTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testIntegerOverflow
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:143)
	at org.apache.commons.math.fraction.FractionTest.testIntegerOverflow(FractionTest.java:137)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testDoubleValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testDoubleValue(FractionTest.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testConstructor
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testConstructor(FractionTest.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.optimization.MultiDirectionalTest#testCostExceptions
java.lang.VerifyError: StackMapTable error: bad offset
Exception Details:
  Location:
    org/apache/commons/math/optimization/MultiDirectional.iterateSimplex()V @0: getstatic
  Reason:
    Invalid stackmap specification.
  Current Frame:
    bci: @133
    flags: { }
    locals: { 'org/apache/commons/math/optimization/MultiDirectional', '[Lorg/apache/commons/math/optimization/PointCostPair;', double, double_2nd, double, double_2nd }
    stack: { }
  Bytecode:
    0000000: b200 5003 5c2e 0460 4f2a b400 084c b200
    0000010: 5004 5c2e 0460 4f2b 0332 b600 0949 b200
    0000020: 5005 5c2e 0460 4f2a 2b0f b700 0a39 04b2
    0000030: 0050 065c 2e04 604f 1804 2898 9c00 53b2
    0000040: 0050 075c 2e04 604f 2ab4 0008 3a06 b200
    0000050: 5008 5c2e 0460 4f2a 2b2a b400 04b7 000a
    0000060: 3907 b200 5010 065c 2e04 604f 1804 1807
    0000070: 989d 0013 b200 5010 075c 2e04 604f 2a19
    0000080: 06b5 0008 b200 5010 085c 2e04 604f b1b2
    0000090: 0050 1009 5c2e 0460 4f2a 2b2a b400 07b7
    00000a0: 000a 3906 b200 5010 0a5c 2e04 604f 1806
    00000b0: 2898 9c00 0eb2 0050 100b 5c2e 0460 4fb1
    00000c0: b200 5010 0c5c 2e04 604f a7ff 36       
  Stackmap Table:
    same_frame(@0)
    full_frame(@132,{Object[#39],Object[#40],Double,Double,Object[#40],Double},{})
    chop_frame(@133,2)
    chop_frame(@182,3)

	at org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions(MultiDirectionalTest.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.optimization.MultiDirectionalTest#testRosenbrock
java.lang.VerifyError: StackMapTable error: bad offset
Exception Details:
  Location:
    org/apache/commons/math/optimization/MultiDirectional.iterateSimplex()V @0: getstatic
  Reason:
    Invalid stackmap specification.
  Current Frame:
    bci: @133
    flags: { }
    locals: { 'org/apache/commons/math/optimization/MultiDirectional', '[Lorg/apache/commons/math/optimization/PointCostPair;', double, double_2nd, double, double_2nd }
    stack: { }
  Bytecode:
    0000000: b200 5003 5c2e 0460 4f2a b400 084c b200
    0000010: 5004 5c2e 0460 4f2b 0332 b600 0949 b200
    0000020: 5005 5c2e 0460 4f2a 2b0f b700 0a39 04b2
    0000030: 0050 065c 2e04 604f 1804 2898 9c00 53b2
    0000040: 0050 075c 2e04 604f 2ab4 0008 3a06 b200
    0000050: 5008 5c2e 0460 4f2a 2b2a b400 04b7 000a
    0000060: 3907 b200 5010 065c 2e04 604f 1804 1807
    0000070: 989d 0013 b200 5010 075c 2e04 604f 2a19
    0000080: 06b5 0008 b200 5010 085c 2e04 604f b1b2
    0000090: 0050 1009 5c2e 0460 4f2a 2b2a b400 07b7
    00000a0: 000a 3906 b200 5010 0a5c 2e04 604f 1806
    00000b0: 2898 9c00 0eb2 0050 100b 5c2e 0460 4fb1
    00000c0: b200 5010 0c5c 2e04 604f a7ff 36       
  Stackmap Table:
    same_frame(@0)
    full_frame(@132,{Object[#39],Object[#40],Double,Double,Object[#40],Double},{})
    chop_frame(@133,2)
    chop_frame(@182,3)

	at org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(MultiDirectionalTest.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.optimization.MultiDirectionalTest#testPowell
java.lang.VerifyError: StackMapTable error: bad offset
Exception Details:
  Location:
    org/apache/commons/math/optimization/MultiDirectional.iterateSimplex()V @0: getstatic
  Reason:
    Invalid stackmap specification.
  Current Frame:
    bci: @133
    flags: { }
    locals: { 'org/apache/commons/math/optimization/MultiDirectional', '[Lorg/apache/commons/math/optimization/PointCostPair;', double, double_2nd, double, double_2nd }
    stack: { }
  Bytecode:
    0000000: b200 5003 5c2e 0460 4f2a b400 084c b200
    0000010: 5004 5c2e 0460 4f2b 0332 b600 0949 b200
    0000020: 5005 5c2e 0460 4f2a 2b0f b700 0a39 04b2
    0000030: 0050 065c 2e04 604f 1804 2898 9c00 53b2
    0000040: 0050 075c 2e04 604f 2ab4 0008 3a06 b200
    0000050: 5008 5c2e 0460 4f2a 2b2a b400 04b7 000a
    0000060: 3907 b200 5010 065c 2e04 604f 1804 1807
    0000070: 989d 0013 b200 5010 075c 2e04 604f 2a19
    0000080: 06b5 0008 b200 5010 085c 2e04 604f b1b2
    0000090: 0050 1009 5c2e 0460 4f2a 2b2a b400 07b7
    00000a0: 000a 3906 b200 5010 0a5c 2e04 604f 1806
    00000b0: 2898 9c00 0eb2 0050 100b 5c2e 0460 4fb1
    00000c0: b200 5010 0c5c 2e04 604f a7ff 36       
  Stackmap Table:
    same_frame(@0)
    full_frame(@132,{Object[#39],Object[#40],Double,Double,Object[#40],Double},{})
    chop_frame(@133,2)
    chop_frame(@182,3)

	at org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(MultiDirectionalTest.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(FractionFormatTest.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(FractionFormatTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseProper
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:214)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:245)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseProper(FractionFormatTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:214)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:245)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(FractionFormatTest.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParse
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:309)
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:133)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:245)
	at org.apache.commons.math.fraction.FractionFormatTest.testParse(FractionFormatTest.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatZero
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(FractionFormatTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(FractionFormatTest.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseInteger
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:283)
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:133)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:245)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(FractionFormatTest.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormat
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormat(FractionFormatTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:309)
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:133)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:245)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(FractionFormatTest.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testPredictorCoefficients
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.<init>(AdamsMoultonIntegrator.java:88)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testPredictorCoefficients(AdamsMoultonIntegratorTest.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testDimensionCheck
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.<init>(AdamsMoultonIntegrator.java:88)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDimensionCheck(AdamsMoultonIntegratorTest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testBackward
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.<init>(AdamsMoultonIntegrator.java:88)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(AdamsMoultonIntegratorTest.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testSmallStep
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.<init>(AdamsMoultonIntegrator.java:88)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(AdamsMoultonIntegratorTest.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testDecreasingSteps
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.<init>(AdamsMoultonIntegrator.java:88)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(AdamsMoultonIntegratorTest.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testBigStep
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.<init>(AdamsMoultonIntegrator.java:88)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(AdamsMoultonIntegratorTest.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testCorrectorCoefficients
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.<init>(AdamsMoultonIntegrator.java:88)
	at org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testCorrectorCoefficients(AdamsMoultonIntegratorTest.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

junit.framework.TestSuite$1#warning
junit.framework.AssertionFailedError: Class org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest has no public constructor TestCase(String name) or TestCase()
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at junit.framework.TestSuite$1.runTest(TestSuite.java:100)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testDimensionCheck
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.<init>(AdamsBashforthIntegrator.java:84)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDimensionCheck(AdamsBashforthIntegratorTest.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testBackward
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.<init>(AdamsBashforthIntegrator.java:84)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(AdamsBashforthIntegratorTest.java:208)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testSmallStep
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.<init>(AdamsBashforthIntegrator.java:84)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(AdamsBashforthIntegratorTest.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testDecreasingSteps
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.<init>(AdamsBashforthIntegrator.java:84)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(AdamsBashforthIntegratorTest.java:137)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testBigStep
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.<init>(AdamsBashforthIntegrator.java:84)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(AdamsBashforthIntegratorTest.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testCoefficients
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(AdamsBashforthIntegrator.java:272)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.<init>(AdamsBashforthIntegrator.java:84)
	at org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testCoefficients(AdamsBashforthIntegratorTest.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)


/************************/
/* Suspicious statement */
/************************/
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:243 -> 0.5150787536377127 (ep: 0, ef: 13, np: 1252, nf: 36)
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:246 -> 0.5150787536377127 (ep: 0, ef: 13, np: 1252, nf: 36)
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:249 -> 0.5150787536377127 (ep: 0, ef: 13, np: 1252, nf: 36)
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:258 -> 0.5150787536377127 (ep: 0, ef: 13, np: 1252, nf: 36)
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:269 -> 0.5150787536377127 (ep: 0, ef: 13, np: 1252, nf: 36)
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:272 -> 0.5150787536377127 (ep: 0, ef: 13, np: 1252, nf: 36)
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:250 -> 0.4948716593053935 (ep: 0, ef: 12, np: 1252, nf: 37)
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:251 -> 0.4948716593053935 (ep: 0, ef: 12, np: 1252, nf: 37)
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:252 -> 0.4948716593053935 (ep: 0, ef: 12, np: 1252, nf: 37)
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:255 -> 0.4948716593053935 (ep: 0, ef: 12, np: 1252, nf: 37)
org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator:253 -> 0.45175395145262565 (ep: 0, ef: 10, np: 1252, nf: 39)
org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:243 -> 0.35740730949833976 (ep: 14, ef: 13, np: 1238, nf: 36)
org.apache.commons.math.fraction.ProperFractionFormat:224 -> 0.35714285714285715 (ep: 6, ef: 10, np: 1246, nf: 39)
org.apache.commons.math.fraction.ProperFractionFormat:228 -> 0.35714285714285715 (ep: 6, ef: 10, np: 1246, nf: 39)
org.apache.commons.math.fraction.ProperFractionFormat:229 -> 0.35714285714285715 (ep: 6, ef: 10, np: 1246, nf: 39)
org.apache.commons.math.fraction.FractionFormat:114 -> 0.35714285714285715 (ep: 6, ef: 10, np: 1246, nf: 39)
org.apache.commons.math.fraction.FractionFormat:115 -> 0.35714285714285715 (ep: 6, ef: 10, np: 1246, nf: 39)
org.apache.commons.math.fraction.FractionFormat:132 -> 0.35714285714285715 (ep: 6, ef: 10, np: 1246, nf: 39)
org.apache.commons.math.fraction.FractionFormat:133 -> 0.35714285714285715 (ep: 6, ef: 10, np: 1246, nf: 39)
org.apache.commons.math.fraction.FractionFormat:154 -> 0.35714285714285715 (ep: 6, ef: 10, np: 1246, nf: 39)
org.apache.commons.math.fraction.FractionFormat:155 -> 0.35714285714285715 (ep: 6, ef: 10, np: 1246, nf: 39)
org.apache.commons.math.fraction.FractionFormat:156 -> 0.35714285714285715 (ep: 6, ef: 10, np: 1246, nf: 39)
org.apache.commons.math.fraction.FractionFormat:157 -> 0.35714285714285715 (ep: 6, ef: 10, np: 1246, nf: 39)
org.apache.commons.math.fraction.FractionFormat:277 -> 0.26997462357801943 (ep: 2, ef: 5, np: 1250, nf: 44)
org.apache.commons.math.fraction.FractionFormat:278 -> 0.26997462357801943 (ep: 2, ef: 5, np: 1250, nf: 44)
org.apache.commons.math.fraction.FractionFormat:279 -> 0.26997462357801943 (ep: 2, ef: 5, np: 1250, nf: 44)
org.apache.commons.math.fraction.FractionFormat:383 -> 0.26997462357801943 (ep: 2, ef: 5, np: 1250, nf: 44)
org.apache.commons.math.fraction.ProperFractionFormat:133 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:244 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:245 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:261 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:264 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:267 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:268 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:360 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:361 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:362 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:371 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:372 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:373 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:375 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:378 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:379 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:380 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:382 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.fraction.FractionFormat:387 -> 0.2525381361380527 (ep: 3, ef: 5, np: 1249, nf: 44)
org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:160 -> 0.25041709177206134 (ep: 42, ef: 13, np: 1210, nf: 36)
org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:161 -> 0.25041709177206134 (ep: 42, ef: 13, np: 1210, nf: 36)
org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:341 -> 0.25041709177206134 (ep: 42, ef: 13, np: 1210, nf: 36)
org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:342 -> 0.25041709177206134 (ep: 42, ef: 13, np: 1210, nf: 36)
org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:355 -> 0.25041709177206134 (ep: 42, ef: 13, np: 1210, nf: 36)
org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:356 -> 0.25041709177206134 (ep: 42, ef: 13, np: 1210, nf: 36)
org.apache.commons.math.fraction.FractionFormat:233 -> 0.23809523809523808 (ep: 4, ef: 5, np: 1248, nf: 44)
org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:299 -> 0.2285984832473322 (ep: 53, ef: 13, np: 1199, nf: 36)
org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:300 -> 0.2285984832473322 (ep: 53, ef: 13, np: 1199, nf: 36)
org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:301 -> 0.2285984832473322 (ep: 53, ef: 13, np: 1199, nf: 36)
org.apache.commons.math.fraction.FractionFormat:225 -> 0.21597969886241553 (ep: 3, ef: 4, np: 1249, nf: 45)
org.apache.commons.math.fraction.ProperFractionFormat:211 -> 0.20203050891044214 (ep: 0, ef: 2, np: 1252, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:212 -> 0.20203050891044214 (ep: 0, ef: 2, np: 1252, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:213 -> 0.20203050891044214 (ep: 0, ef: 2, np: 1252, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:214 -> 0.20203050891044214 (ep: 0, ef: 2, np: 1252, nf: 47)
org.apache.commons.math.fraction.FractionFormat:309 -> 0.20203050891044214 (ep: 0, ef: 2, np: 1252, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:166 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:173 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:174 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:175 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:182 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:193 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:196 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:197 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:205 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.FractionFormat:291 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.FractionFormat:292 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.FractionFormat:293 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.FractionFormat:286 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.FractionFormat:297 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.FractionFormat:300 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.FractionFormat:301 -> 0.1649572197684645 (ep: 1, ef: 2, np: 1251, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:154 -> 0.14285714285714285 (ep: 2, ef: 2, np: 1250, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:157 -> 0.14285714285714285 (ep: 2, ef: 2, np: 1250, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:158 -> 0.14285714285714285 (ep: 2, ef: 2, np: 1250, nf: 47)
org.apache.commons.math.fraction.FractionFormat:283 -> 0.14285714285714285 (ep: 0, ef: 1, np: 1252, nf: 48)
org.apache.commons.math.fraction.ProperFractionFormat:134 -> 0.12777531299998798 (ep: 3, ef: 2, np: 1249, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:138 -> 0.12777531299998798 (ep: 3, ef: 2, np: 1249, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:141 -> 0.12777531299998798 (ep: 3, ef: 2, np: 1249, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:144 -> 0.12777531299998798 (ep: 3, ef: 2, np: 1249, nf: 47)
org.apache.commons.math.fraction.ProperFractionFormat:145 -> 0.12777531299998798 (ep: 3, ef: 2, np: 1249, nf: 47)
org.apache.commons.math.ode.nonstiff.TestProblemAbstract:124 -> 0.12323745508964391 (ep: 78, ef: 8, np: 1174, nf: 41)
org.apache.commons.math.ode.nonstiff.TestProblemAbstract:140 -> 0.12323745508964391 (ep: 78, ef: 8, np: 1174, nf: 41)
org.apache.commons.math.ode.nonstiff.TestProblemAbstract:93 -> 0.11915109374689986 (ep: 84, ef: 8, np: 1168, nf: 41)
org.apache.commons.math.ode.nonstiff.TestProblemAbstract:94 -> 0.11915109374689986 (ep: 84, ef: 8, np: 1168, nf: 41)
org.apache.commons.math.ode.nonstiff.TestProblemAbstract:95 -> 0.11915109374689986 (ep: 84, ef: 8, np: 1168, nf: 41)
org.apache.commons.math.ode.nonstiff.TestProblemAbstract:96 -> 0.11915109374689986 (ep: 84, ef: 8, np: 1168, nf: 41)
org.apache.commons.math.ode.nonstiff.TestProblemAbstract:97 -> 0.11915109374689986 (ep: 84, ef: 8, np: 1168, nf: 41)
org.apache.commons.math.ode.nonstiff.TestProblemAbstract:104 -> 0.11915109374689986 (ep: 84, ef: 8, np: 1168, nf: 41)
org.apache.commons.math.ode.nonstiff.TestProblemAbstract:105 -> 0.11915109374689986 (ep: 84, ef: 8, np: 1168, nf: 41)
org.apache.commons.math.ode.nonstiff.TestProblemAbstract:112 -> 0.11915109374689986 (ep: 84, ef: 8, np: 1168, nf: 41)
org.apache.commons.math.ode.nonstiff.TestProblemAbstract:113 -> 0.11915109374689986 (ep: 84, ef: 8, np: 1168, nf: 41)
org.apache.commons.math.fraction.ProperFractionFormat:116 -> 0.11664236870396086 (ep: 4, ef: 2, np: 1248, nf: 47)
org.apache.commons.math.ode.nonstiff.TestProblemFactory:46 -> 0.10798984943120776 (ep: 5, ef: 2, np: 1247, nf: 47)
org.apache.commons.math.ode.nonstiff.TestProblem1:70 -> 0.10101525445522107 (ep: 6, ef: 2, np: 1246, nf: 47)
org.apache.commons.math.analysis.UnivariateRealSolverUtils:179 -> 0.10101525445522107 (ep: 1, ef: 1, np: 1251, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:119 -> 0.08247860988423225 (ep: 2, ef: 1, np: 1250, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:132 -> 0.08247860988423225 (ep: 2, ef: 1, np: 1250, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:144 -> 0.08247860988423225 (ep: 2, ef: 1, np: 1250, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:106 -> 0.07142857142857142 (ep: 3, ef: 1, np: 1249, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:100 -> 0.06388765649999399 (ep: 4, ef: 1, np: 1248, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:103 -> 0.06388765649999399 (ep: 4, ef: 1, np: 1248, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:75 -> 0.050507627227610534 (ep: 7, ef: 1, np: 1245, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:76 -> 0.050507627227610534 (ep: 7, ef: 1, np: 1245, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:78 -> 0.050507627227610534 (ep: 7, ef: 1, np: 1245, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:72 -> 0.047619047619047616 (ep: 8, ef: 1, np: 1244, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:82 -> 0.047619047619047616 (ep: 8, ef: 1, np: 1244, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:167 -> 0.047619047619047616 (ep: 8, ef: 1, np: 1244, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:189 -> 0.047619047619047616 (ep: 8, ef: 1, np: 1244, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:155 -> 0.041239304942116126 (ep: 11, ef: 1, np: 1241, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:159 -> 0.041239304942116126 (ep: 11, ef: 1, np: 1241, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:160 -> 0.041239304942116126 (ep: 11, ef: 1, np: 1241, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:177 -> 0.041239304942116126 (ep: 11, ef: 1, np: 1241, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:181 -> 0.041239304942116126 (ep: 11, ef: 1, np: 1241, nf: 48)
org.apache.commons.math.distribution.FDistributionImpl:182 -> 0.041239304942116126 (ep: 11, ef: 1, np: 1241, nf: 48)
org.apache.commons.math.distribution.AbstractContinuousDistribution:67 -> 0.03688555567816588 (ep: 14, ef: 1, np: 1238, nf: 48)
org.apache.commons.math.distribution.AbstractContinuousDistribution:80 -> 0.03688555567816588 (ep: 14, ef: 1, np: 1238, nf: 48)
org.apache.commons.math.distribution.AbstractContinuousDistribution:81 -> 0.03688555567816588 (ep: 14, ef: 1, np: 1238, nf: 48)
org.apache.commons.math.distribution.AbstractContinuousDistribution:82 -> 0.03688555567816588 (ep: 14, ef: 1, np: 1238, nf: 48)
org.apache.commons.math.distribution.AbstractContinuousDistribution:84 -> 0.03688555567816588 (ep: 14, ef: 1, np: 1238, nf: 48)
org.apache.commons.math.analysis.UnivariateRealSolverUtils:128 -> 0.033671751485073696 (ep: 17, ef: 1, np: 1235, nf: 48)
org.apache.commons.math.analysis.UnivariateRealSolverUtils:171 -> 0.033671751485073696 (ep: 17, ef: 1, np: 1235, nf: 48)
org.apache.commons.math.analysis.UnivariateRealSolverUtils:174 -> 0.033671751485073696 (ep: 17, ef: 1, np: 1235, nf: 48)
org.apache.commons.math.analysis.UnivariateRealSolverUtils:178 -> 0.033671751485073696 (ep: 17, ef: 1, np: 1235, nf: 48)
org.apache.commons.math.distribution.AbstractContinuousDistribution:61 -> 0.031943828249996996 (ep: 19, ef: 1, np: 1233, nf: 48)
org.apache.commons.math.special.Beta$1:141 -> 0.0215365246126974 (ep: 43, ef: 1, np: 1209, nf: 48)
org.apache.commons.math.special.Beta$1:142 -> 0.0215365246126974 (ep: 43, ef: 1, np: 1209, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:310 -> 0.021295885499998 (ep: 44, ef: 1, np: 1208, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:311 -> 0.021295885499998 (ep: 44, ef: 1, np: 1208, nf: 48)
org.apache.commons.math.special.Beta:130 -> 0.020004001200400138 (ep: 50, ef: 1, np: 1202, nf: 48)
org.apache.commons.math.special.Beta:133 -> 0.020004001200400138 (ep: 50, ef: 1, np: 1202, nf: 48)
org.apache.commons.math.special.Beta:156 -> 0.020004001200400138 (ep: 50, ef: 1, np: 1202, nf: 48)
org.apache.commons.math.special.Beta$1:140 -> 0.020004001200400138 (ep: 50, ef: 1, np: 1202, nf: 48)
org.apache.commons.math.special.Beta$1:145 -> 0.020004001200400138 (ep: 50, ef: 1, np: 1202, nf: 48)
org.apache.commons.math.special.Beta$1:146 -> 0.020004001200400138 (ep: 50, ef: 1, np: 1202, nf: 48)
org.apache.commons.math.special.Beta$1:149 -> 0.020004001200400138 (ep: 50, ef: 1, np: 1202, nf: 48)
org.apache.commons.math.special.Beta$1:153 -> 0.020004001200400138 (ep: 50, ef: 1, np: 1202, nf: 48)
org.apache.commons.math.special.Beta:200 -> 0.019810721293758184 (ep: 51, ef: 1, np: 1201, nf: 48)
org.apache.commons.math.special.Beta:197 -> 0.018758061837103223 (ep: 57, ef: 1, np: 1195, nf: 48)
org.apache.commons.math.special.Beta:204 -> 0.018758061837103223 (ep: 57, ef: 1, np: 1195, nf: 48)
org.apache.commons.math.special.Beta:59 -> 0.01859841585440341 (ep: 58, ef: 1, np: 1194, nf: 48)
org.apache.commons.math.special.Beta:126 -> 0.01859841585440341 (ep: 58, ef: 1, np: 1194, nf: 48)
org.apache.commons.math.special.Beta:161 -> 0.01859841585440341 (ep: 58, ef: 1, np: 1194, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:102 -> 0.017857142857142856 (ep: 63, ef: 1, np: 1189, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:107 -> 0.017857142857142856 (ep: 63, ef: 1, np: 1189, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:116 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:117 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:118 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:119 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:120 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:121 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:122 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:128 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:129 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:130 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:131 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:132 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:133 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.distribution.ContinuousDistributionAbstractTest:134 -> 0.01695402368848362 (ep: 70, ef: 1, np: 1182, nf: 48)
org.apache.commons.math.util.ContinuedFraction:133 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:134 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:135 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:136 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:137 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:138 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:139 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:140 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:141 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:142 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:143 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:144 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:145 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:146 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:161 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:162 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:165 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:166 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:167 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:168 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:169 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:170 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:172 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.util.ContinuedFraction:178 -> 0.015873015873015872 (ep: 80, ef: 1, np: 1172, nf: 48)
org.apache.commons.math.special.Gamma:93 -> 0.014285714285714285 (ep: 99, ef: 1, np: 1153, nf: 48)
org.apache.commons.math.special.Gamma:95 -> 0.014285714285714285 (ep: 99, ef: 1, np: 1153, nf: 48)
org.apache.commons.math.special.Gamma:96 -> 0.014285714285714285 (ep: 99, ef: 1, np: 1153, nf: 48)
org.apache.commons.math.special.Gamma:97 -> 0.014285714285714285 (ep: 99, ef: 1, np: 1153, nf: 48)
org.apache.commons.math.special.Gamma:99 -> 0.014285714285714285 (ep: 99, ef: 1, np: 1153, nf: 48)
org.apache.commons.math.special.Gamma:101 -> 0.014285714285714285 (ep: 99, ef: 1, np: 1153, nf: 48)
org.apache.commons.math.special.Gamma:102 -> 0.014285714285714285 (ep: 99, ef: 1, np: 1153, nf: 48)
org.apache.commons.math.special.Gamma:90 -> 0.014076132545204187 (ep: 102, ef: 1, np: 1150, nf: 48)
org.apache.commons.math.special.Gamma:106 -> 0.014076132545204187 (ep: 102, ef: 1, np: 1150, nf: 48)


