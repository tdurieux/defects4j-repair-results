export PATH="/home/tdurieux/defects4j/framework/bin:$PATH";cp -r /home/tdurieux/projects/math/math_105 /tmp/math_105_Ranking;cd /tmp/math_105_Ranking;defects4j compile;mkdir lib/;cp -r /home/tdurieux/defects4j/framework/projects/lib/* lib/;cp -r /home/tdurieux/defects4j/framework/projects/Math/lib/* lib/;find . -type f -name "package-info.java" -delete;
cd /tmp/math_105_Ranking;cp -r /home/tdurieux/nopol/z3-x64-debian-7.7/bin/ lib/z3;time java -cp /home/tdurieux/nopol/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar fr.inria.lille.repair.Main --mode ranking --type condition --oracle angelic --synthesis smt --solver z3 --solver-path lib/z3/z3 --complianceLevel 3 --source src/java/ --classpath target/classes/:target/test-classes/:lib/commons-discovery-0.5.jar:/home/tdurieux/nopol/nopol-0.0.3-SNAPSHOT-jar-with-dependencies.jar;rm -rf /tmp/math_105_Ranking;

/************************/
Executed tests:   887
Successful tests: 860
Failed tests:     27

org.apache.commons.math.fraction.FractionTest#testFloatValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testFloatValue(FractionTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testAbs
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testAbs(FractionTest.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testAdd
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testAdd(FractionTest.java:192)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testSubtract
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testSubtract(FractionTest.java:347)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testReciprocal
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testReciprocal(FractionTest.java:137)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testGetReducedFraction
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(FractionTest.java:431)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testConstructorDouble
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testConstructorDouble(FractionTest.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testCompareTo
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testCompareTo(FractionTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testLongValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testLongValue(FractionTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testIntValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testIntValue(FractionTest.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testDivide
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testDivide(FractionTest.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testMultiply
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testMultiply(FractionTest.java:326)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(FractionTest.java:417)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testNegate
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testNegate(FractionTest.java:168)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testDoubleValue
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testDoubleValue(FractionTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionTest#testConstructor
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionTest.testConstructor(FractionTest.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative
junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at junit.framework.TestCase.assertTrue(TestCase.java:201)
	at org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(SimpleRegressionTest.java:275)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(FractionFormatTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(FractionFormatTest.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseProper
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:213)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:244)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseProper(FractionFormatTest.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:213)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:244)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(FractionFormatTest.java:216)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParse
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:308)
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:132)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:244)
	at org.apache.commons.math.fraction.FractionFormatTest.testParse(FractionFormatTest.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatZero
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(FractionFormatTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(FractionFormatTest.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseInteger
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:282)
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:132)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:244)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(FractionFormatTest.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testFormat
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormatTest.testFormat(FractionFormatTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)

org.apache.commons.math.fraction.FractionFormatTest#testParseNegative
java.lang.ClassFormatError: StackMapTable format error: bad offset for Uninitialized in method org.apache.commons.math.fraction.Fraction.addSub(Lorg/apache/commons/math/fraction/Fraction;Z)Lorg/apache/commons/math/fraction/Fraction;
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:308)
	at org.apache.commons.math.fraction.ProperFractionFormat.parse(ProperFractionFormat.java:132)
	at org.apache.commons.math.fraction.FractionFormat.parse(FractionFormat.java:244)
	at org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(FractionFormatTest.java:168)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.gzoltar.core.instr.testing.junit.JUnitRunner.run(JUnitRunner.java:47)
	at com.gzoltar.core.instr.Runner.main(Runner.java:46)


/************************/
/* Suspicious statement */
/************************/
org.apache.commons.math.fraction.ProperFractionFormat:223 -> 0.4811252243246881 (ep: 6, ef: 10, np: 854, nf: 17)
org.apache.commons.math.fraction.ProperFractionFormat:227 -> 0.4811252243246881 (ep: 6, ef: 10, np: 854, nf: 17)
org.apache.commons.math.fraction.ProperFractionFormat:228 -> 0.4811252243246881 (ep: 6, ef: 10, np: 854, nf: 17)
org.apache.commons.math.fraction.FractionFormat:113 -> 0.4811252243246881 (ep: 6, ef: 10, np: 854, nf: 17)
org.apache.commons.math.fraction.FractionFormat:114 -> 0.4811252243246881 (ep: 6, ef: 10, np: 854, nf: 17)
org.apache.commons.math.fraction.FractionFormat:131 -> 0.4811252243246881 (ep: 6, ef: 10, np: 854, nf: 17)
org.apache.commons.math.fraction.FractionFormat:132 -> 0.4811252243246881 (ep: 6, ef: 10, np: 854, nf: 17)
org.apache.commons.math.fraction.FractionFormat:153 -> 0.4811252243246881 (ep: 6, ef: 10, np: 854, nf: 17)
org.apache.commons.math.fraction.FractionFormat:154 -> 0.4811252243246881 (ep: 6, ef: 10, np: 854, nf: 17)
org.apache.commons.math.fraction.FractionFormat:155 -> 0.4811252243246881 (ep: 6, ef: 10, np: 854, nf: 17)
org.apache.commons.math.fraction.FractionFormat:156 -> 0.4811252243246881 (ep: 6, ef: 10, np: 854, nf: 17)
org.apache.commons.math.fraction.FractionFormat:276 -> 0.363696483726654 (ep: 2, ef: 5, np: 858, nf: 22)
org.apache.commons.math.fraction.FractionFormat:277 -> 0.363696483726654 (ep: 2, ef: 5, np: 858, nf: 22)
org.apache.commons.math.fraction.FractionFormat:278 -> 0.363696483726654 (ep: 2, ef: 5, np: 858, nf: 22)
org.apache.commons.math.fraction.FractionFormat:382 -> 0.363696483726654 (ep: 2, ef: 5, np: 858, nf: 22)
org.apache.commons.math.fraction.ProperFractionFormat:132 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:243 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:244 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:260 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:263 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:266 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:267 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:359 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:360 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:361 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:370 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:371 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:372 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:374 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:377 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:378 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:379 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:381 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:386 -> 0.34020690871988585 (ep: 3, ef: 5, np: 857, nf: 22)
org.apache.commons.math.fraction.FractionFormat:232 -> 0.3207501495497921 (ep: 4, ef: 5, np: 856, nf: 22)
org.apache.commons.math.fraction.FractionFormat:224 -> 0.29095718698132317 (ep: 3, ef: 4, np: 857, nf: 23)
org.apache.commons.math.fraction.ProperFractionFormat:210 -> 0.2721655269759087 (ep: 0, ef: 2, np: 860, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:211 -> 0.2721655269759087 (ep: 0, ef: 2, np: 860, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:212 -> 0.2721655269759087 (ep: 0, ef: 2, np: 860, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:213 -> 0.2721655269759087 (ep: 0, ef: 2, np: 860, nf: 25)
org.apache.commons.math.fraction.FractionFormat:308 -> 0.2721655269759087 (ep: 0, ef: 2, np: 860, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:165 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:172 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:173 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:174 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:181 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:192 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:195 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:196 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:204 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.FractionFormat:290 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.FractionFormat:291 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.FractionFormat:292 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.FractionFormat:285 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.FractionFormat:296 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.FractionFormat:299 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.FractionFormat:300 -> 0.2222222222222222 (ep: 1, ef: 2, np: 859, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:153 -> 0.19245008972987526 (ep: 2, ef: 2, np: 858, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:156 -> 0.19245008972987526 (ep: 2, ef: 2, np: 858, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:157 -> 0.19245008972987526 (ep: 2, ef: 2, np: 858, nf: 25)
org.apache.commons.math.fraction.FractionFormat:282 -> 0.19245008972987526 (ep: 0, ef: 1, np: 860, nf: 26)
org.apache.commons.math.fraction.ProperFractionFormat:133 -> 0.17213259316477408 (ep: 3, ef: 2, np: 857, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:137 -> 0.17213259316477408 (ep: 3, ef: 2, np: 857, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:140 -> 0.17213259316477408 (ep: 3, ef: 2, np: 857, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:143 -> 0.17213259316477408 (ep: 3, ef: 2, np: 857, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:144 -> 0.17213259316477408 (ep: 3, ef: 2, np: 857, nf: 25)
org.apache.commons.math.fraction.ProperFractionFormat:115 -> 0.15713484026367722 (ep: 4, ef: 2, np: 856, nf: 25)
org.apache.commons.math.stat.regression.SimpleRegression:106 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:107 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:108 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:110 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:111 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:112 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:113 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:114 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:115 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:116 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:118 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:119 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:120 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:121 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)
org.apache.commons.math.stat.regression.SimpleRegression:264 -> 0.06415002990995841 (ep: 8, ef: 1, np: 852, nf: 26)


