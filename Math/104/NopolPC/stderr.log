xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtIfImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_2(Logger.java:432)
	at ch.qos.logback.classic.Logger.debug(Logger.java:510)
	at fr.inria.lille.repair.nopol.spoon.ConditionalAdder.processCondition(ConditionalAdder.java:16)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:42)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:17)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtBlockImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_2(Logger.java:432)
	at ch.qos.logback.classic.Logger.debug(Logger.java:510)
	at fr.inria.lille.repair.nopol.spoon.ConditionalAdder.processCondition(ConditionalAdder.java:16)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:42)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:17)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtIfImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_2(Logger.java:432)
	at ch.qos.logback.classic.Logger.debug(Logger.java:510)
	at fr.inria.lille.repair.nopol.spoon.ConditionalAdder.processCondition(ConditionalAdder.java:30)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:42)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:17)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtBlockImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1137)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_2(Logger.java:432)
	at ch.qos.logback.classic.Logger.debug(Logger.java:510)
	at fr.inria.lille.repair.nopol.spoon.ConditionalAdder.processCondition(ConditionalAdder.java:30)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:42)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:17)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtIfImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1148)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_2(Logger.java:432)
	at ch.qos.logback.classic.Logger.debug(Logger.java:510)
	at fr.inria.lille.repair.nopol.spoon.ConditionalAdder.processCondition(ConditionalAdder.java:16)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:42)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:17)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtBlockImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1148)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_2(Logger.java:432)
	at ch.qos.logback.classic.Logger.debug(Logger.java:510)
	at fr.inria.lille.repair.nopol.spoon.ConditionalAdder.processCondition(ConditionalAdder.java:16)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:42)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:17)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtIfImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1148)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_2(Logger.java:432)
	at ch.qos.logback.classic.Logger.debug(Logger.java:510)
	at fr.inria.lille.repair.nopol.spoon.ConditionalAdder.processCondition(ConditionalAdder.java:30)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:42)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:17)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtBlockImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1148)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1137)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_2(Logger.java:432)
	at ch.qos.logback.classic.Logger.debug(Logger.java:510)
	at fr.inria.lille.repair.nopol.spoon.ConditionalAdder.processCondition(ConditionalAdder.java:30)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:42)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:17)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
	at xxl.java.compiler.DynamicClassCompiler.runCompilationTask(DynamicClassCompiler.java:95)
	at xxl.java.compiler.DynamicClassCompiler.javaBytecodeFor(DynamicClassCompiler.java:63)
	at fr.inria.lille.commons.spoon.SpoonedFile.compilationFor(SpoonedFile.java:177)
	at fr.inria.lille.commons.spoon.SpoonedFile.compileModelledClasses(SpoonedFile.java:154)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:138)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space
	at xxl.java.junit.TestSuiteExecution.executionResult(TestSuiteExecution.java:84)
	at xxl.java.junit.TestSuiteExecution.runTestCase(TestSuiteExecution.java:41)
	at xxl.java.junit.TestSuiteExecution.runTestCases(TestSuiteExecution.java:71)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.buildFor(ConstraintModelBuilder.java:73)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:67)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:139)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
Caused by: java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Java heap space
	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.util.concurrent.FutureTask.get(FutureTask.java:202)
	at xxl.java.junit.TestSuiteExecution.executionResult(TestSuiteExecution.java:80)
	... 9 more
Caused by: java.lang.OutOfMemoryError: Java heap space
	at java.lang.Throwable.getStackTraceElement(Native Method)
	at java.lang.Throwable.getOurStackTrace(Throwable.java:827)
	at java.lang.Throwable.getStackTrace(Throwable.java:816)
	at xxl.java.junit.TestCasesListener.logTestRunFinished(TestCasesListener.java:139)
	at xxl.java.junit.TestCasesListener.testRunFinished(TestCasesListener.java:63)
	at org.junit.runner.notification.RunNotifier$2.notifyListener(RunNotifier.java:95)
	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:61)
	at org.junit.runner.notification.RunNotifier.fireTestRunFinished(RunNotifier.java:92)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:161)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:22)
	at xxl.java.junit.JUnitSingleTestRunner.call(JUnitSingleTestRunner.java:10)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
## OAR [2015-05-11 23:11:37] Job 1499160 KILLED
