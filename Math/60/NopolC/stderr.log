SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtIfImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_1(Logger.java:413)
	at ch.qos.logback.classic.Logger.debug(Logger.java:506)
	at fr.inria.lille.repair.nopol.spoon.ConditionalReplacer.processCondition(ConditionalReplacer.java:16)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:42)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:17)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
SLF4J: Failed toString() invocation on an object of type [spoon.support.reflect.code.CtIfImpl]
spoon.reflect.declaration.ParentNotInitializedException: parent not initialized for class spoon.support.reflect.code.CtBlockImpl (?)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:187)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:212)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtElementImpl.getParent(CtElementImpl.java:216)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getDeclaringType(CtSimpleTypeImpl.java:96)
	at spoon.reflect.factory.TypeFactory.createReference(TypeFactory.java:156)
	at spoon.support.reflect.declaration.CtSimpleTypeImpl.getReference(CtSimpleTypeImpl.java:196)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtClass(DefaultJavaPrettyPrinter.java:798)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtNewClass(DefaultJavaPrettyPrinter.java:1569)
	at spoon.support.reflect.code.CtNewClassImpl.accept(CtNewClassImpl.java:47)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeLocalVariable(DefaultJavaPrettyPrinter.java:1372)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtLocalVariable(DefaultJavaPrettyPrinter.java:1379)
	at spoon.support.reflect.code.CtLocalVariableImpl.accept(CtLocalVariableImpl.java:53)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.writeStatement(DefaultJavaPrettyPrinter.java:2089)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtBlock(DefaultJavaPrettyPrinter.java:680)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1151)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.visitCtIf(DefaultJavaPrettyPrinter.java:1148)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(DefaultJavaPrettyPrinter.java:424)
	at spoon.support.reflect.declaration.CtElementImpl.toString(CtElementImpl.java:363)
	at org.slf4j.helpers.MessageFormatter.safeObjectAppend(MessageFormatter.java:304)
	at org.slf4j.helpers.MessageFormatter.deeplyAppendParameter(MessageFormatter.java:276)
	at org.slf4j.helpers.MessageFormatter.arrayFormat(MessageFormatter.java:230)
	at ch.qos.logback.classic.spi.LoggingEvent.<init>(LoggingEvent.java:115)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:439)
	at ch.qos.logback.classic.Logger.filterAndLog_1(Logger.java:413)
	at ch.qos.logback.classic.Logger.debug(Logger.java:506)
	at fr.inria.lille.repair.nopol.spoon.ConditionalReplacer.processCondition(ConditionalReplacer.java:16)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:42)
	at fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter.process(ConditionalLoggingInstrumenter.java:17)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:94)
	at spoon.reflect.visitor.CtScanner.visitCtIf(CtScanner.java:421)
	at spoon.support.reflect.code.CtIfImpl.accept(CtIfImpl.java:37)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtBlock(CtScanner.java:261)
	at spoon.support.reflect.code.CtBlockImpl.accept(CtBlockImpl.java:43)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.reflect.visitor.CtScanner.visitCtMethod(CtScanner.java:490)
	at spoon.support.reflect.declaration.CtMethodImpl.accept(CtMethodImpl.java:40)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:66)
	at spoon.reflect.visitor.CtScanner.visitCtClass(CtScanner.java:297)
	at spoon.support.reflect.declaration.CtClassImpl.accept(CtClassImpl.java:53)
	at spoon.reflect.visitor.CtScanner.scan(CtScanner.java:141)
	at spoon.support.visitor.ProcessingVisitor.scan(ProcessingVisitor.java:90)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:174)
	at spoon.support.RuntimeProcessingManager.process(RuntimeProcessingManager.java:156)
	at fr.inria.lille.commons.spoon.SpoonedFile.processModelledClasses(SpoonedFile.java:136)
	at fr.inria.lille.commons.spoon.SpoonedFile.process(SpoonedFile.java:128)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:119)
	at fr.inria.lille.commons.spoon.SpoonedFile.processedAndDumpedToClassLoader(SpoonedFile.java:115)
	at fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder.<init>(ConstraintModelBuilder.java:57)
	at fr.inria.lille.repair.nopol.synth.SynthesizerFactory.getFor(SynthesizerFactory.java:86)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:123)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)
Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Arrays.java:2367)
	at java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:130)
	at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:114)
	at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:415)
	at java.lang.StringBuilder.append(StringBuilder.java:132)
	at ch.qos.logback.core.pattern.FormattingConverter.write(FormattingConverter.java:40)
	at ch.qos.logback.core.pattern.PatternLayoutBase.writeLoopOnConverters(PatternLayoutBase.java:119)
	at ch.qos.logback.classic.PatternLayout.doLayout(PatternLayout.java:168)
	at ch.qos.logback.classic.PatternLayout.doLayout(PatternLayout.java:59)
	at ch.qos.logback.core.encoder.LayoutWrappingEncoder.doEncode(LayoutWrappingEncoder.java:134)
	at ch.qos.logback.core.OutputStreamAppender.writeOut(OutputStreamAppender.java:188)
	at ch.qos.logback.core.OutputStreamAppender.subAppend(OutputStreamAppender.java:212)
	at ch.qos.logback.core.OutputStreamAppender.append(OutputStreamAppender.java:103)
	at ch.qos.logback.core.UnsynchronizedAppenderBase.doAppend(UnsynchronizedAppenderBase.java:88)
	at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:48)
	at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:272)
	at ch.qos.logback.classic.Logger.callAppenders(Logger.java:259)
	at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:441)
	at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:395)
	at ch.qos.logback.classic.Logger.debug(Logger.java:502)
	at xxl.java.library.LoggerLibrary.logDebug(LoggerLibrary.java:117)
	at xxl.java.library.LoggerLibrary.logDebug(LoggerLibrary.java:85)
	at xxl.java.library.LoggerLibrary.logCollection(LoggerLibrary.java:149)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.satisfyingSolution(ConstraintBasedSynthesis.java:150)
	at fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis.codesSynthesisedFrom(ConstraintBasedSynthesis.java:56)
	at fr.inria.lille.repair.nopol.synth.DefaultSynthesizer.buildPatch(DefaultSynthesizer.java:85)
	at fr.inria.lille.repair.nopol.NoPol.solveWithMultipleBuild(NoPol.java:139)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:81)
	at fr.inria.lille.repair.nopol.NoPol.build(NoPol.java:71)
	at fr.inria.lille.repair.nopol.NoPolLauncher.launch(NoPolLauncher.java:52)
	at fr.inria.lille.repair.Main.main(Main.java:60)

real	7m15.506s
user	13m57.824s
sys	0m17.865s
